/*
 Author:    https://github.com/1emvr
 Email:     1emvr@protonmail.com
 Date:      12/19/2022  10:39   AM

 An excerpt from the book "Hacking: The Art of Exploitation, Vol 2"

*/

void fatal(char *message) {
/*
    This is just a simple error-printing handler.
    It will take errors returned from external functions
    and pass them here, appending the error code to our message.
*/
    char error_message[100];

    strcpy(error_message, "[!!] Fatal Error ");
    strncat(error_message, message, 83);
    perror(error_message);

    exit(-1);
}

void *ec_malloc(unsigned int size) {
/*
    A simple error-checking malloc() so that we don't have to include it
    every time we create a new piece of code. Malloc is passed a "size"
    externally and if it fails, the message returns an error
*/
    void *pointer;
    pointer = malloc(size);

    if(pointer == NULL)
        fatal("in ec_malloc() on memory allocation");

    return pointer;
}
